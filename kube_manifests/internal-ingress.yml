apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-a
  labels:
    app: api-a
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-a
  template:
    metadata:
      labels:
        app: api-a
    spec:
      containers:
      - name: api
        image: chineduacr.azurecr.io/apia:v1.1
        imagePullPolicy: IfNotPresent
        resources: {}
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3    
        readinessProbe:
          httpGet:
            path: /readiness
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: api-a-service
  labels:
    app: api-a
spec:
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 80
  selector:
    app: api-a
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-b-appsettings
data:
  appsettings.json: |-
    {
      "ApiAServiceUrl": "http://api-a-service:8081/api"      
    }
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-b
  labels:
    app: api-b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-b
  template:
    metadata:
      labels:
        app: api-b
        aadpodidbinding: api-b
    spec:
      containers:
      - name: api
        image: chineduacr.azurecr.io/apib:v1.1
        imagePullPolicy: IfNotPresent
        resources: {}
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3    
        readinessProbe:
          httpGet:
            path: /readiness
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: appsettings
          mountPath: /app/config          
      volumes:
      - name: appsettings
        configMap:
          name: api-b-appsettings
---
apiVersion: v1
kind: Service
metadata:
  name: api-b-service
  labels:
    app: api-b
spec:
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 80
  selector:
    app: api-b
  type: ClusterIP
---
#SINGLE PATH INGRESS

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: api-b-ingress
#   namespace: default
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   ingressClassName: nginx
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix      
#         backend:
#           service:
#             name: api-b-service
#             port:
#               number: 8081
---
#SINGLE PATH INGRESS

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-a-b-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /apia(/|$)(.*)
        pathType: Prefix      
        backend:
          service:
            name: api-a-service
            port:
              number: 8081
      - path: /apib(/|$)(.*)
        pathType: Prefix      
        backend:
          service:
            name: api-b-service
            port:
              number: 8081